package Controller;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import java.util.Scanner;

import Controller.CineplexController;
import Initialisation.Cinema;
import Initialisation.Cineplex;
import Initialisation.Movie;
import Initialisation.ShowTime;
import Controller.MovieController;
import DataHandler.DataHandler;


public class AdminController {
	public static final String FILEPATH = DataHandler.MOVIEPATH;
	public static final String FILEPATH1 = DataHandler.CINEPATH;
	public static final String FILEPATH2 = DataHandler.STPATH;

	
	public void displayCineplexList(){
		CineplexController cineControl = new CineplexController();
		List<Cineplex> cineList = cineControl.retrieveCineplexList();
		int i=0;
		for(Cineplex c: cineList) {
			System.out.format("|"+ (i+1) +". Cineplex Name: %s  Location: %s",c.getCineplexName(),c.getLocation());
			System.out.println("\n");
			i++;
		}
		if(cineList.size() == 0){
			System.out.println("Currently there is no cineplex.");
		}
		
	}
	
	public void addMovieToCineplex(){
		String movieChoice = " ";
		//String[] movieUserList = null;
		Scanner sc = new Scanner(System.in);
		
		MovieController movieController = new MovieController();
		List<Movie> movieListView = DataHandler.readFilePath(FILEPATH);
		List<Cineplex> cineList = DataHandler.readFilePath(FILEPATH1);
		CineplexController cineplexControl = new CineplexController();
		Cineplex cineplexUserChoice = cineplexControl.listCineplex();
		Movie m = new Movie();
		listMovieSpecificToCinplex(cineplexUserChoice);
		
		List<Movie> movieList = new ArrayList<Movie>();
		movieList = cineplexUserChoice.getMovies();	
		
		int count = 0;
		if(!movieList.isEmpty()){
			System.out.println("**************List of Movies Available*************************");
			for(Movie mov: movieListView) {
			
					System.out.format(" Movie Title: %s",mov.getTitle());
					System.out.println("\n");
					count++;
				
			}
		} 
		
		
		
		System.out.println("\n");
	
		
		if(count != movieList.size()){
			boolean movieInside;
			do{
				movieInside = false;
				System.out.println("Enter Movie Title to Add to Cineplex: ");
				movieChoice = sc.nextLine();
				
				for(Movie mm: movieList){
					if(movieChoice.equals(mm.getTitle())){
						System.out.println("Movie Title" + movieChoice + " is already added to the cineplex");
						movieInside = true;
						break;
					}
				}
				
				
			}while(movieInside);
		
			for(int j = 0; j< movieListView.size(); j++)
			{
				if(movieListView.get(j).getTitle().equals(movieChoice))
				{
					m = movieListView.get(j);
					break;
				}
			}
			
			movieList.add(m);
			Collections.sort(movieList, new Comparator<Movie>(){

				@Override
			    public int compare( Movie m1, Movie m2) {
					if (m1.getTitle() == null) {
				        return -1;
				    }
				    if (m2.getTitle() == null) {
				        return 1;
				    }
				    if (m1.getTitle().equals( m2.getTitle() )) {
				        return 0;
				    }
				    return m1.getTitle().compareTo(m2.getTitle());
				  }
			    });
			
			
			for(int l = 0; l < cineList.size(); l++){
				if(cineplexUserChoice.getCineplexID() == cineList.get(l).getCineplexID())
				{
					cineList.get(l).setMovies(movieList);
					break;
				}
			}
			
			DataHandler.writeFilePath(cineList, FILEPATH1);

			System.out.println("Movie '" + m.getTitle() + "' added successfully to Cineplex '" + cineplexUserChoice.getCineplexName() + "'");
			
		} else {
			System.out.println("No more movies to add!");
		}
		
		
		
		
		
	}
	/*public void addCineplex() {
		int cineplexID, cinemaUser, countCineplex = 0;
		String name, location;
		Scanner sc = new Scanner(System.in);
		Scanner sc2 = new Scanner(System.in);
		
		CineplexController cineplexController = new CineplexController();
		List<Cineplex> cineplexList = cineplexController.retrieveCineplexList();	
		List<Cinema> cinema = new ArrayList<Cinema>();
		List<Movie> movie = new ArrayList<Movie>();
		List<ShowTime> showTime = new ArrayList<ShowTime>();
		
		System.out.println("Enter Cineplex Name: ");
		name = sc.nextLine();
		
		System.out.println("Enter Cineplex Location: ");
		location = sc.nextLine();
		
		
		Cineplex cine = null;
		System.out.println("Do you want allocate cinemas for Cineplex " + name + " (1: yes, 2: no)?");
		cinemaUser = sc2.nextInt();
		
		if(cinemaUser == 1){
			cine = new Cineplex(cineplexList.size()+1,location, name, null);
			cine.setMovie(movie);
			cine.setShowTime(showTime);
			cine.setCinemas(new ArrayList<Cinema>());
			cineplexController.addCineplexToList(cine);
			addCinemaToCineplex(cine);
			
		}
		else{
			cine = new Cineplex(cineplexList.size()+1,location, name, null);
			cine.setMovie(movie);
			cine.setShowTime(showTime);
			cineplexController.addCineplexToList(cine);
		}
		
		
	}*/
	public void listMovieSpecificToCinplex(Cineplex cineUserChoice){
		List<Movie> movieList = new ArrayList<Movie>();
		movieList = cineUserChoice.getMovies();	
		
		System.out.println("*************List of Movies Inside the Cineplex: *************");
		for (int i = 0; i< movieList.size();i++) {
			System.out.format("|"+ (i+1) +". Movie Title: %s",movieList.get(i).getTitle());
			System.out.println("\n");
		}
	}
	
	public void displayCinemaList(){
		CineplexController cineControl = new CineplexController();
		
		Cineplex cineUserChoice = cineControl.listCineplex();
		
		List<Cinema> cinemaList = cineUserChoice.getCinemas();
		
		int i=0;
		for(Cinema c: cinemaList) {
			System.out.format("|"+ (i+1) +". Cinema Code: %s  Cinema Type: %s",c.getCinemaCode(),c.getCinemaType());
			System.out.println("\n");
			i++;
		}
		
	}
	public static void listbyCinema(){
		int stID;

		Scanner sc = new Scanner(System.in);

		//Controllers
		CineplexController cineController = new CineplexController();
		MovieController movieController = new MovieController();

		List<Cineplex> cineplexList = cineController.retrieveCineplexList();
		Cineplex cineplex = retrieveCineplex();
		Cinema cinema = retrieveCinemaCode(cineplex);
		List<Movie> movieList = movieController.retrieveMovieList(cineplex.getMovies());	

		ShowTimeController stc = new ShowTimeController();
		List<ShowTime> showTimeList = DataHandler.readFilePath(FILEPATH2);

		
		if(!showTimeList.isEmpty()) {
			String stHeader = String.format("%-15s %-20s %-15s %-12s %-10s", "Show Time ID","Movie Title","Date","Day","Time");
			System.out.println(stHeader);
			System.out.println(String.format("%-15s %-20s %-15s %-12s %-10s", "---------------","------------","----------","--------","------"));

			for (ShowTime st : showTimeList) {
				for(Movie m: movieList){
					if (st.getMovieTitle().equals(m.getTitle())&& st.getCinemaCode().equals(cinema.getCinemaCode())){
						System.out.println(String.format("%-15s %-20s %-15s %-12s %-10s", st.getShowTimeId(), m.getTitle(), st.getDate(),st.getDay(), 
								st.getTime()));
					}
				}
			}
		} else {
			System.out.println("No show time available for this cinema");
		}
		
		
	}
	
	
	public static Cineplex retrieveCineplex(){
		int index;
		
		Scanner sc = new Scanner(System.in);
		
		CineplexController cineplexController = new CineplexController();


		List<Cineplex> cineplexList = cineplexController.retrieveCineplexList();
		
		int i=0;
		for(Cineplex c: cineplexList) {
			System.out.format("|"+ (i+1) +". Cineplex Name: %s  Location: %s",c.getCineplexName(),c.getLocation());
			System.out.println("\n");
			i++;
		}

		System.out.println("\nEnter index: ");
		index = sc.nextInt();
		

		return cineplexList.get(index-1);
	}
	
	public static Cinema retrieveCinemaCode(Cineplex cineplex){

		int index;

		Scanner sc = new Scanner(System.in);


		List<Cinema> cinema = cineplex.getCinemas();

		
		int i=0;
		for(Cinema c: cinema) {
			System.out.format("|"+ (i+1) +". Cinema Code: %s  Cinema Type: %s",c.getCinemaCode(),c.getCinemaType());
			System.out.println("\n");
			i++;
		}
		
		System.out.println("\nEnter index: ");
		index = sc.nextInt();

		return cinema.get(index-1);
	}


	
}
